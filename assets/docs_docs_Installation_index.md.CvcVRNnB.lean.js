import{_ as i,c as a,a2 as t,o as l}from"./chunks/framework.Ba-TGwNR.js";const c=JSON.parse('{"title":"安装","description":"","frontmatter":{},"headers":[],"relativePath":"docs/docs/Installation/index.md","filePath":"docs/docs/Installation/index.md","lastUpdated":1730777569000}'),e={name:"docs/docs/Installation/index.md"};function p(n,s,h,o,k,d){return l(),a("div",null,s[0]||(s[0]=[t(`<h1 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h1><blockquote><p>GSAP 是“与框架无关的”，这意味着它可以在 React、Webflow、Wordpress 或任何其他 JS/Web 框架中使用。核心 GSAP 文件和所有插件都只是 Javascript 文件。 此视频和下面的安装帮助程序都介绍了加载文件的最常见方法。即通过 NPM、Yarn 和使用简单的 <code>&lt;script&gt; </code>标签。选择您自己的冒险，或查看左侧子菜单中的安装指南，以获取特定于框架或工具的指导。</p></blockquote><h3 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h3><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gsap</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://cdn.jsdelivr.net/npm/gsap@3.12.5/dist/gsap.min.js&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yarn</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gsap</span></span></code></pre></div><p>zip 下载内容</p><p>zip 文件包含以下目录：</p><ul><li><code>/minified/</code> - 最简单的选项。以脚本标签加载到网页中，普遍兼容并高度压缩以实现最大加载速度。</li><li><code>/UMD/</code> - 缩小文件的未压缩版本，采用 UMD 格式（高度兼容）。通常，这些用于较旧的构建工具或调试（因为源代码是人类可读的）</li><li><code>/ESM</code> - ES 模块文件，经过编译以兼容几乎所有现代构建工具（没有花哨的 ES6 内容）</li><li><code>/src/</code> - 原始源代码文件，即现代 ES6 模块</li></ul><h3 id="安装帮助" tabindex="-1">安装帮助 <a class="header-anchor" href="#安装帮助" aria-label="Permalink to &quot;安装帮助&quot;">​</a></h3><p>导入和包含插件</p><p>免费</p><p>收费</p><h4 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h4><ol><li>我需要为每个插件执行 <code>gsap.registerPlugin（）</code> 吗？</li></ol><blockquote><p>通常，是的。如果您通过<code> &lt;script&gt;</code> 标签（即不是构建工具）加载 GSAP，只要核心已经加载，GSAP 就会尝试自动注册插件，但我们仍然建议注册插件，以便构建工具不会在摇树（tree shaking. ）期间删除它们。您可以一次注册所有插件，例如</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MotionPathPlugin, ScrollToPlugin, TextPlugin)</span></span></code></pre></div><ol start="2"><li>多次注册插件不好吗？</li></ol><blockquote><p>不，这完全没问题。它无济于事，也不伤人。</p></blockquote><blockquote><p>如果您正在使用模块环境并希望避免多次注册插件，则可以将 GSAP 和您需要的所有插件导入到一个 gsap.js 文件中，然后从其他模块中导入该文件中所需的内容。例如，使用 GSAP 核心和 DrawSVG gsap.js可以是：</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;gsap&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> *</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;gsap/DrawSVGPlugin&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { gsap } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;gsap&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { DrawSVGPlugin } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;gsap/DrawSVGPlugin&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DrawSVGPlugin)</span></span></code></pre></div><p>然后在另一个文件中：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { gsap, DrawSVGPlugin } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;../gsap.js&#39;</span></span></code></pre></div><ol start="3"><li>我收到 TypeScript 错误 - 我该怎么办？</li></ol><blockquote><p>首先，确保您使用的是 GitHub 主存储库中的官方 TypeScript 定义。如果您仍然遇到问题，请随时在我们的论坛中发帖或在 GSAP GitHub 存储库上创建新问题。如果需要告诉编译器定义在哪里，可以执行如下操作：</p></blockquote><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;compilerOptions&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;">    ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;files&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;node_modules/gsap/types/index.d.ts&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="4"><li>如何使用构建工具加载 GSAP 的非 ES 模块版本？</li></ol><blockquote><p>某些构建工具可能无法理解 ES 模块，因此您可以改用 UMD（通用模块定义）格式。为此，只需单击上面的安装帮助程序中的“NPM”，然后单击“UMD”并复制生成的代码。例如：<code>import { gsap } from &quot;gsap/dist/gsap&quot;;</code>（注意文件都在 /dist/ 子目录中）</p></blockquote><ol start="5"><li>为什么我的生产构建失败了？（可能在 webpack、vue-cli 或 create-react-app 中） <blockquote><p>现代构建工具通常使用称为 tree shaking 的过程来删除未使用的代码。有时它们过于激进并丢弃插件，因为您没有在自己的代码中的任何位置引用它们。为防止这种情况，您必须使用 gsap.registerPlugin 显式注册插件</p></blockquote></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">registerPlugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MotionPathPlugin, ScrollToPlugin, TextPlugin)</span></span></code></pre></div><ol start="6"><li><code>bonus</code> 插件的 CDN 链接在哪里？</li></ol><blockquote><p>bonus 插件仅适用于 Club GSAP 会员，因此它们不在 CDN 上。您必须从您的帐户控制面板下载它们。</p></blockquote><ol start="7"><li>我可以使用旧版本的 GSAP 吗？</li></ol><blockquote><p>确定！您可以通过转到 GitHub 版本页面来查看和下载旧版本的 GSAP。不过，我们建议使用最新版本。</p></blockquote>`,34)]))}const g=i(e,[["render",p]]);export{c as __pageData,g as default};
