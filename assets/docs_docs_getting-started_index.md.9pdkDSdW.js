import{_ as a,c as t,a2 as e,o as i}from"./chunks/framework.Ba-TGwNR.js";const n="/gsap-zh-doc/assets/01.Cpop3c6s.png",g=JSON.parse('{"title":"入门","description":"","frontmatter":{},"headers":[],"relativePath":"docs/docs/getting-started/index.md","filePath":"docs/docs/getting-started/index.md","lastUpdated":1730119215000}'),p={name:"docs/docs/getting-started/index.md"};function d(o,s,r,l,h,c){return i(),t("div",null,s[0]||(s[0]=[e('<h1 id="入门" tabindex="-1">入门 <a class="header-anchor" href="#入门" aria-label="Permalink to &quot;入门&quot;">​</a></h1><p>欢迎！在本文中，我们将介绍 GSAP 的核心基础知识并为一些 HTML 元素制作动画。🥳</p><p>如果这不是您的最终目标，请不要担心。无论您打算制作什么动画，使用哪个框架 - 此处介绍的技术和原则都将为您服务。</p><h2 id="创建动画。" tabindex="-1">创建动画。 <a class="header-anchor" href="#创建动画。" aria-label="Permalink to &quot;创建动画。&quot;">​</a></h2><p>让我们首先使用 “box” 类为 HTML 元素制作动画。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gsap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;.box&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { x: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">200</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> })</span></span></code></pre></div><p>像这样的单个动画称为 &#39;tween&#39; 这个补间说“嘿 GSAP，用 &#39;.box&#39; 类将元素动画化为 200px 的 x（如 transform： translateX（200px））”。</p><p><img src="'+n+'" alt=""></p>',8)]))}const E=a(p,[["render",d]]);export{g as __pageData,E as default};
